

Microchip Technology PIC18 LITE Macro Assembler V1.41 build -162212810 
                                                                                               Tue Jun 27 18:05:00 2017

Microchip Technology Omniscient Code Generator v1.41 (Free mode) build 201701250102
     1                           	processor	18F25K50
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1
    15                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    16                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    17  0000                     
    18                           ; Version 1.41
    19                           ; Generated 25/01/2017 GMT
    20                           ; 
    21                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    22                           ; All rights reserved.
    23                           ; 
    24                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    25                           ; 
    26                           ; Redistribution and use in source and binary forms, with or without modification, are
    27                           ; permitted provided that the following conditions are met:
    28                           ; 
    29                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    30                           ;        conditions and the following disclaimer.
    31                           ; 
    32                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    33                           ;        of conditions and the following disclaimer in the documentation and/or other
    34                           ;        materials provided with the distribution.
    35                           ; 
    36                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    37                           ;        software without specific prior written permission.
    38                           ; 
    39                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    40                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    41                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    42                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    43                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    44                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    45                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    46                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    47                           ; 
    48                           ; 
    49                           ; Code-generator required, PIC18F25K50 Definitions
    50                           ; 
    51                           ; SFR Addresses
    52  0000                     _ANSELC	set	3933
    53  0000                     _ANSELB	set	3932
    54  0000                     _ANSELA	set	3931
    55  0000                     _PORTEbits	set	3972
    56  0000                     _PORTB	set	3969
    57  0000                     _PORTCbits	set	3970
    58  0000                     _ADCON2	set	4032
    59  0000                     _ADCON1	set	4033
    60  0000                     _ADCON0	set	4034
    61  0000                     _T0CON	set	4053
    62  0000                     _TRISC	set	3988
    63  0000                     _LATC	set	3979
    64  0000                     _TRISB	set	3987
    65  0000                     _LATB	set	3978
    66  0000                     _TRISA	set	3986
    67  0000                     _LATA	set	3977
    68  0000                     _ACTCON	set	4021
    69  0000                     _OSCCON2	set	4050
    70  0000                     _OSCCON	set	4051
    71  0000                     _OSCTUNE	set	3995
    72  0000                     _RBPU	set	32655
    73  0000                     _PLLRDY	set	32407
    74                           
    75                           ; #config settings
    76  0000                     
    77                           	psect	cinit
    78  002008                     __pcinit:
    79                           	opt stack 0
    80  002008                     start_initialization:
    81                           	opt stack 0
    82  002008                     __initialization:
    83                           	opt stack 0
    84                           
    85                           ; Clear objects allocated to COMRAM (3 bytes)
    86  002008  6A08               	clrf	(__pbssCOMRAM+2)& (0+255),c
    87  00200A  6A07               	clrf	(__pbssCOMRAM+1)& (0+255),c
    88  00200C  6A06               	clrf	__pbssCOMRAM& (0+255),c
    89  00200E                     end_of_initialization:
    90                           	opt stack 0
    91  00200E                     __end_of__initialization:
    92                           	opt stack 0
    93  00200E  0100               	movlb	0
    94  002010  EF86  F03F         	goto	_main	;jump to C main() function
    95                           
    96                           	psect	bssCOMRAM
    97  000006                     __pbssCOMRAM:
    98                           	opt stack 0
    99  000006                     _receivedData:
   100                           	opt stack 0
   101  000006                     	ds	1
   102  000007                     _receivedDeviceAddress:
   103                           	opt stack 0
   104  000007                     	ds	1
   105  000008                     _receivedBitLength:
   106                           	opt stack 0
   107  000008                     	ds	1
   108                           
   109                           	psect	cstackCOMRAM
   110  000001                     __pcstackCOMRAM:
   111                           	opt stack 0
   112  000001                     receiveBit@counter:
   113                           	opt stack 0
   114                           
   115                           ; 1 bytes @ 0x0
   116  000001                     	ds	1
   117  000002                     receiveData@i:
   118                           	opt stack 0
   119  000002                     receiveAddress@i:
   120                           	opt stack 0
   121                           
   122                           ; 1 bytes @ 0x1
   123  000002                     	ds	1
   124  000003                     receiveData@cData:
   125                           	opt stack 0
   126  000003                     receiveAddress@cAddress:
   127                           	opt stack 0
   128                           
   129                           ; 1 bytes @ 0x2
   130  000003                     	ds	1
   131  000004                     ??_main:
   132                           
   133                           ; 1 bytes @ 0x3
   134  000004                     	ds	2
   135                           
   136 ;;
   137 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   138 ;;
   139 ;; *************** function _main *****************
   140 ;; Defined at:
   141 ;;		line 108 in file "ReceiverBot.c"
   142 ;; Parameters:    Size  Location     Type
   143 ;;		None
   144 ;; Auto vars:     Size  Location     Type
   145 ;;		None
   146 ;; Return value:  Size  Location     Type
   147 ;;                  2  108[None  ] int 
   148 ;; Registers used:
   149 ;;		wreg, status,2, status,0, cstack
   150 ;; Tracked objects:
   151 ;;		On entry : 0/0
   152 ;;		On exit  : 0/0
   153 ;;		Unchanged: 0/0
   154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   155 ;;      Params:         0       0       0       0       0       0       0       0       0
   156 ;;      Locals:         0       0       0       0       0       0       0       0       0
   157 ;;      Temps:          2       0       0       0       0       0       0       0       0
   158 ;;      Totals:         2       0       0       0       0       0       0       0       0
   159 ;;Total ram usage:        2 bytes
   160 ;; Hardware stack levels required when called:    3
   161 ;; This function calls:
   162 ;;		_initOsc
   163 ;;		_initPorts
   164 ;;		_receiveTransmission
   165 ;; This function is called by:
   166 ;;		Startup code after reset
   167 ;; This function uses a non-reentrant model
   168 ;;
   169                           
   170                           	psect	text0
   171  007F0C                     __ptext0:
   172                           	opt stack 0
   173  007F0C                     _main:
   174                           	opt stack 28
   175                           
   176                           ;ReceiverBot.c: 109: initOsc();
   177                           
   178                           ;incstack = 0
   179  007F0C  EC3C  F03F         	call	_initOsc	;wreg free
   180                           
   181                           ;ReceiverBot.c: 110: initPorts();
   182  007F10  EC6D  F03F         	call	_initPorts	;wreg free
   183  007F14                     l815:
   184                           
   185                           ;ReceiverBot.c: 112: PORTB = 0b00000000;
   186  007F14  0E00               	movlw	0
   187  007F16  6E81               	movwf	3969,c	;volatile
   188  007F18                     l110:
   189  007F18  BE82               	btfsc	3970,7,c	;volatile
   190  007F1A  D7FE               	goto	l110
   191                           
   192                           ;ReceiverBot.c: 114: receiveTransmission();
   193  007F1C  EC58  F03F         	call	_receiveTransmission	;wreg free
   194                           
   195                           ;ReceiverBot.c: 115: if (receivedDeviceAddress == 0b00000101) {
   196  007F20  0E05               	movlw	5
   197  007F22  1807               	xorwf	_receivedDeviceAddress,w,c
   198  007F24  B4D8               	btfsc	status,2,c
   199                           
   200                           ;ReceiverBot.c: 116: PORTB = receivedData;
   201  007F26  C006  FF81         	movff	_receivedData,3969	;volatile
   202                           
   203                           ;ReceiverBot.c: 117: }
   204                           ;ReceiverBot.c: 118: _delay((unsigned long)((18)*(48000000/4000.0)));
   205  007F2A  0E02               	movlw	2
   206  007F2C  6E05               	movwf	(??_main+1)& (0+255),c
   207  007F2E  0E19               	movlw	25
   208  007F30  6E04               	movwf	??_main& (0+255),c
   209  007F32  0E82               	movlw	130
   210  007F34                     u257:
   211  007F34  2EE8               	decfsz	wreg,f,c
   212  007F36  D7FE               	bra	u257
   213  007F38  2E04               	decfsz	??_main& (0+255),f,c
   214  007F3A  D7FC               	bra	u257
   215  007F3C  2E05               	decfsz	(??_main+1)& (0+255),f,c
   216  007F3E  D7FA               	bra	u257
   217                           
   218                           ;ReceiverBot.c: 120: if (PORTEbits.RE3 == 0)
   219  007F40  B684               	btfsc	3972,3,c	;volatile
   220  007F42  D7E8               	goto	l815
   221  007F44  EF0E F000          	goto	28	;# 
   222  007F48  D7E5               	goto	l815
   223  007F4A                     __end_of_main:
   224                           	opt stack 0
   225                           wreg	equ	0xFE8
   226                           status	equ	0xFD8
   227                           
   228 ;; *************** function _receiveTransmission *****************
   229 ;; Defined at:
   230 ;;		line 94 in file "ReceiverBot.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;		None
   235 ;; Return value:  Size  Location     Type
   236 ;;                  1    wreg      void 
   237 ;; Registers used:
   238 ;;		wreg, status,2, status,0, cstack
   239 ;; Tracked objects:
   240 ;;		On entry : 0/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   244 ;;      Params:         0       0       0       0       0       0       0       0       0
   245 ;;      Locals:         0       0       0       0       0       0       0       0       0
   246 ;;      Temps:          0       0       0       0       0       0       0       0       0
   247 ;;      Totals:         0       0       0       0       0       0       0       0       0
   248 ;;Total ram usage:        0 bytes
   249 ;; Hardware stack levels used:    1
   250 ;; Hardware stack levels required when called:    2
   251 ;; This function calls:
   252 ;;		_receiveAddress
   253 ;;		_receiveBit
   254 ;;		_receiveData
   255 ;; This function is called by:
   256 ;;		_main
   257 ;; This function uses a non-reentrant model
   258 ;;
   259                           
   260                           	psect	text1
   261  007EB0                     __ptext1:
   262                           	opt stack 0
   263  007EB0                     _receiveTransmission:
   264                           	opt stack 28
   265                           
   266                           ;ReceiverBot.c: 95: receivedBitLength = receiveBit();
   267                           
   268                           ;incstack = 0
   269  007EB0  EC47  F03F         	call	_receiveBit	;wreg free
   270  007EB4  6E08               	movwf	_receivedBitLength,c
   271                           
   272                           ;ReceiverBot.c: 96: if (receivedBitLength > 22 && receivedBitLength < 26) {
   273  007EB6  0E16               	movlw	22
   274  007EB8  6408               	cpfsgt	_receivedBitLength,c
   275  007EBA  D00A               	goto	l809
   276  007EBC  0E1A               	movlw	26
   277  007EBE  6008               	cpfslt	_receivedBitLength,c
   278  007EC0  D007               	goto	l809
   279                           
   280                           ;ReceiverBot.c: 97: receivedData = receiveData();
   281  007EC2  ECA5  F03F         	call	_receiveData	;wreg free
   282  007EC6  6E06               	movwf	_receivedData,c
   283                           
   284                           ;ReceiverBot.c: 98: receivedDeviceAddress = receiveAddress();
   285  007EC8  ECCE  F03F         	call	_receiveAddress	;wreg free
   286  007ECC  6E07               	movwf	_receivedDeviceAddress,c
   287                           
   288                           ;ReceiverBot.c: 99: } else {
   289  007ECE  0012               	return	
   290  007ED0                     l809:
   291                           
   292                           ;ReceiverBot.c: 100: receivedData = 0;
   293  007ED0  0E00               	movlw	0
   294  007ED2  6E06               	movwf	_receivedData,c
   295                           
   296                           ;ReceiverBot.c: 101: receivedDeviceAddress = 0;
   297  007ED4  0E00               	movlw	0
   298  007ED6  6E07               	movwf	_receivedDeviceAddress,c
   299  007ED8  0012               	return	
   300  007EDA                     __end_of_receiveTransmission:
   301                           	opt stack 0
   302                           wreg	equ	0xFE8
   303                           status	equ	0xFD8
   304                           
   305 ;; *************** function _receiveData *****************
   306 ;; Defined at:
   307 ;;		line 46 in file "ReceiverBot.c"
   308 ;; Parameters:    Size  Location     Type
   309 ;;		None
   310 ;; Auto vars:     Size  Location     Type
   311 ;;  i               1    1[COMRAM] unsigned char 
   312 ;;  cData           1    2[COMRAM] unsigned char 
   313 ;; Return value:  Size  Location     Type
   314 ;;                  1    wreg      unsigned char 
   315 ;; Registers used:
   316 ;;		wreg, status,2, status,0, cstack
   317 ;; Tracked objects:
   318 ;;		On entry : 0/0
   319 ;;		On exit  : 0/0
   320 ;;		Unchanged: 0/0
   321 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   322 ;;      Params:         0       0       0       0       0       0       0       0       0
   323 ;;      Locals:         2       0       0       0       0       0       0       0       0
   324 ;;      Temps:          0       0       0       0       0       0       0       0       0
   325 ;;      Totals:         2       0       0       0       0       0       0       0       0
   326 ;;Total ram usage:        2 bytes
   327 ;; Hardware stack levels used:    1
   328 ;; Hardware stack levels required when called:    1
   329 ;; This function calls:
   330 ;;		_receiveBit
   331 ;; This function is called by:
   332 ;;		_receiveTransmission
   333 ;; This function uses a non-reentrant model
   334 ;;
   335                           
   336                           	psect	text2
   337  007F4A                     __ptext2:
   338                           	opt stack 0
   339  007F4A                     _receiveData:
   340                           	opt stack 28
   341                           
   342                           ;ReceiverBot.c: 47: unsigned char cData = 0;
   343                           
   344                           ;incstack = 0
   345  007F4A  0E00               	movlw	0
   346  007F4C  6E03               	movwf	receiveData@cData,c
   347                           
   348                           ;ReceiverBot.c: 48: for (unsigned char i = 8; i != 0; i--) {
   349  007F4E  0E08               	movlw	8
   350  007F50  6E02               	movwf	receiveData@i,c
   351  007F52  5002               	movf	receiveData@i,w,c
   352  007F54  B4D8               	btfsc	status,2,c
   353  007F56  D020               	goto	l759
   354  007F58                     l80:
   355  007F58  BE82               	btfsc	3970,7,c	;volatile
   356  007F5A  D7FE               	goto	l80
   357                           
   358                           ;ReceiverBot.c: 50: receivedBitLength = receiveBit();
   359  007F5C  EC47  F03F         	call	_receiveBit	;wreg free
   360  007F60  6E08               	movwf	_receivedBitLength,c
   361                           
   362                           ;ReceiverBot.c: 51: if (receivedBitLength > 3 && receivedBitLength < 9) {
   363  007F62  0E03               	movlw	3
   364  007F64  6408               	cpfsgt	_receivedBitLength,c
   365  007F66  D00A               	goto	l743
   366  007F68  0E09               	movlw	9
   367  007F6A  6008               	cpfslt	_receivedBitLength,c
   368  007F6C  D007               	goto	l743
   369  007F6E                     l739:
   370                           
   371                           ;ReceiverBot.c: 52: if (i != 1) cData = cData >> 1;
   372  007F6E  0402               	decf	receiveData@i,w,c
   373  007F70  B4D8               	btfsc	status,2,c
   374  007F72  D010               	goto	l755
   375  007F74  90D8               	bcf	status,0,c
   376  007F76  3003               	rrcf	receiveData@cData,w,c
   377  007F78  6E03               	movwf	receiveData@cData,c
   378                           
   379                           ;ReceiverBot.c: 54: } else if (receivedBitLength > 9 && receivedBitLength < 15) {
   380  007F7A  D00C               	goto	l755
   381  007F7C                     l743:
   382  007F7C  0E09               	movlw	9
   383  007F7E  6408               	cpfsgt	_receivedBitLength,c
   384  007F80  D007               	goto	l751
   385  007F82  0E0F               	movlw	15
   386  007F84  6008               	cpfslt	_receivedBitLength,c
   387  007F86  D004               	goto	l751
   388                           
   389                           ;ReceiverBot.c: 55: cData = (cData | 0b10000000);
   390  007F88  5003               	movf	receiveData@cData,w,c
   391  007F8A  0980               	iorlw	128
   392  007F8C  6E03               	movwf	receiveData@cData,c
   393  007F8E  D7EF               	goto	l739
   394  007F90                     l751:
   395                           
   396                           ;ReceiverBot.c: 58: return (0);
   397  007F90  0E00               	movlw	0
   398  007F92  0012               	return	
   399  007F94                     l755:
   400  007F94  0602               	decf	receiveData@i,f,c
   401  007F96  D7DD               	goto	L1
   402  007F98                     l759:
   403                           
   404                           ;ReceiverBot.c: 59: }
   405                           ;ReceiverBot.c: 60: }
   406                           ;ReceiverBot.c: 61: return (cData);
   407  007F98  5003               	movf	receiveData@cData,w,c
   408  007F9A  0012               	return	
   409  007F9C                     __end_of_receiveData:
   410                           	opt stack 0
   411                           wreg	equ	0xFE8
   412                           status	equ	0xFD8
   413                           
   414 ;; *************** function _receiveAddress *****************
   415 ;; Defined at:
   416 ;;		line 68 in file "ReceiverBot.c"
   417 ;; Parameters:    Size  Location     Type
   418 ;;		None
   419 ;; Auto vars:     Size  Location     Type
   420 ;;  i               1    1[COMRAM] unsigned char 
   421 ;;  cAddress        1    2[COMRAM] unsigned char 
   422 ;; Return value:  Size  Location     Type
   423 ;;                  1    wreg      unsigned char 
   424 ;; Registers used:
   425 ;;		wreg, status,2, status,0, cstack
   426 ;; Tracked objects:
   427 ;;		On entry : 0/0
   428 ;;		On exit  : 0/0
   429 ;;		Unchanged: 0/0
   430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   431 ;;      Params:         0       0       0       0       0       0       0       0       0
   432 ;;      Locals:         2       0       0       0       0       0       0       0       0
   433 ;;      Temps:          0       0       0       0       0       0       0       0       0
   434 ;;      Totals:         2       0       0       0       0       0       0       0       0
   435 ;;Total ram usage:        2 bytes
   436 ;; Hardware stack levels used:    1
   437 ;; Hardware stack levels required when called:    1
   438 ;; This function calls:
   439 ;;		_receiveBit
   440 ;; This function is called by:
   441 ;;		_receiveTransmission
   442 ;; This function uses a non-reentrant model
   443 ;;
   444                           
   445                           	psect	text3
   446  007F9C                     __ptext3:
   447                           	opt stack 0
   448  007F9C                     _receiveAddress:
   449                           	opt stack 28
   450                           
   451                           ;ReceiverBot.c: 69: unsigned char cAddress = 0;
   452                           
   453                           ;incstack = 0
   454  007F9C  0E00               	movlw	0
   455  007F9E  6E03               	movwf	receiveAddress@cAddress,c
   456                           
   457                           ;ReceiverBot.c: 70: for (unsigned char i = 3; i != 0; i--) {
   458  007FA0  0E03               	movlw	3
   459  007FA2  6E02               	movwf	receiveAddress@i,c
   460  007FA4  5002               	movf	receiveAddress@i,w,c
   461  007FA6  B4D8               	btfsc	status,2,c
   462  007FA8  D01D               	goto	l789
   463  007FAA                     l94:
   464  007FAA  BE82               	btfsc	3970,7,c	;volatile
   465  007FAC  D7FE               	goto	l94
   466                           
   467                           ;ReceiverBot.c: 72: receivedBitLength = receiveBit();
   468  007FAE  EC47  F03F         	call	_receiveBit	;wreg free
   469  007FB2  6E08               	movwf	_receivedBitLength,c
   470                           
   471                           ;ReceiverBot.c: 73: if (receivedBitLength > 3 && receivedBitLength < 9) {
   472  007FB4  0E03               	movlw	3
   473  007FB6  6408               	cpfsgt	_receivedBitLength,c
   474  007FB8  D004               	goto	l775
   475  007FBA  0E09               	movlw	9
   476  007FBC  6008               	cpfslt	_receivedBitLength,c
   477  007FBE  D001               	goto	l775
   478  007FC0  D009               	goto	L2
   479  007FC2                     l775:
   480  007FC2  0E09               	movlw	9
   481  007FC4  6408               	cpfsgt	_receivedBitLength,c
   482  007FC6  D00A               	goto	l781
   483  007FC8  0E0F               	movlw	15
   484  007FCA  6008               	cpfslt	_receivedBitLength,c
   485  007FCC  D007               	goto	l781
   486                           
   487                           ;ReceiverBot.c: 77: cAddress = (cAddress | 0b10000000);
   488  007FCE  5003               	movf	receiveAddress@cAddress,w,c
   489  007FD0  0980               	iorlw	128
   490  007FD2  6E03               	movwf	receiveAddress@cAddress,c
   491  007FD4                     L2:
   492                           
   493                           ;ReceiverBot.c: 78: cAddress = cAddress >> 1;
   494  007FD4  90D8               	bcf	status,0,c
   495  007FD6  3003               	rrcf	receiveAddress@cAddress,w,c
   496  007FD8  6E03               	movwf	receiveAddress@cAddress,c
   497                           
   498                           ;ReceiverBot.c: 79: } else {
   499  007FDA  D002               	goto	l785
   500  007FDC                     l781:
   501                           
   502                           ;ReceiverBot.c: 80: return (0);
   503  007FDC  0E00               	movlw	0
   504  007FDE  0012               	return	
   505  007FE0                     l785:
   506  007FE0  0602               	decf	receiveAddress@i,f,c
   507  007FE2  D7E0               	goto	L3
   508  007FE4                     l789:
   509                           
   510                           ;ReceiverBot.c: 81: }
   511                           ;ReceiverBot.c: 82: }
   512                           ;ReceiverBot.c: 83: cAddress = cAddress >> 1;
   513  007FE4  90D8               	bcf	status,0,c
   514  007FE6  3003               	rrcf	receiveAddress@cAddress,w,c
   515  007FE8  6E03               	movwf	receiveAddress@cAddress,c
   516                           
   517                           ;ReceiverBot.c: 84: cAddress = cAddress >> 1;
   518  007FEA  90D8               	bcf	status,0,c
   519  007FEC  3003               	rrcf	receiveAddress@cAddress,w,c
   520  007FEE  6E03               	movwf	receiveAddress@cAddress,c
   521                           
   522                           ;ReceiverBot.c: 85: cAddress = cAddress >> 1;
   523  007FF0  90D8               	bcf	status,0,c
   524  007FF2  3003               	rrcf	receiveAddress@cAddress,w,c
   525  007FF4  6E03               	movwf	receiveAddress@cAddress,c
   526                           
   527                           ;ReceiverBot.c: 86: cAddress = cAddress >> 1;
   528  007FF6  90D8               	bcf	status,0,c
   529  007FF8  3003               	rrcf	receiveAddress@cAddress,w,c
   530  007FFA  6E03               	movwf	receiveAddress@cAddress,c
   531                           
   532                           ;ReceiverBot.c: 87: return (cAddress);
   533  007FFC  5003               	movf	receiveAddress@cAddress,w,c
   534  007FFE  0012               	return	
   535  008000                     __end_of_receiveAddress:
   536                           	opt stack 0
   537                           wreg	equ	0xFE8
   538                           status	equ	0xFD8
   539                           
   540 ;; *************** function _receiveBit *****************
   541 ;; Defined at:
   542 ;;		line 32 in file "ReceiverBot.c"
   543 ;; Parameters:    Size  Location     Type
   544 ;;		None
   545 ;; Auto vars:     Size  Location     Type
   546 ;;  counter         1    0[COMRAM] unsigned char 
   547 ;; Return value:  Size  Location     Type
   548 ;;                  1    wreg      unsigned char 
   549 ;; Registers used:
   550 ;;		wreg, status,2, status,0
   551 ;; Tracked objects:
   552 ;;		On entry : 0/0
   553 ;;		On exit  : 0/0
   554 ;;		Unchanged: 0/0
   555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   556 ;;      Params:         0       0       0       0       0       0       0       0       0
   557 ;;      Locals:         1       0       0       0       0       0       0       0       0
   558 ;;      Temps:          0       0       0       0       0       0       0       0       0
   559 ;;      Totals:         1       0       0       0       0       0       0       0       0
   560 ;;Total ram usage:        1 bytes
   561 ;; Hardware stack levels used:    1
   562 ;; This function calls:
   563 ;;		Nothing
   564 ;; This function is called by:
   565 ;;		_receiveData
   566 ;;		_receiveAddress
   567 ;;		_receiveTransmission
   568 ;; This function uses a non-reentrant model
   569 ;;
   570                           
   571                           	psect	text4
   572  007E8E                     __ptext4:
   573                           	opt stack 0
   574  007E8E                     _receiveBit:
   575                           	opt stack 28
   576                           
   577                           ;ReceiverBot.c: 33: unsigned char counter = 0;
   578                           
   579                           ;incstack = 0
   580  007E8E  0E00               	movlw	0
   581  007E90  6E01               	movwf	receiveBit@counter,c
   582                           
   583                           ;ReceiverBot.c: 34: while (PORTCbits.RC7 == 0) {
   584  007E92  D00A               	goto	l71
   585  007E94                     l717:
   586                           
   587                           ;ReceiverBot.c: 35: _delay((unsigned long)((100)*(48000000/4000000.0)));
   588  007E94  0EF0               	movlw	240
   589  007E96                     u267:
   590  007E96  D000               	nop2	
   591  007E98  2EE8               	decfsz	wreg,f,c
   592  007E9A  D7FD               	bra	u267
   593                           
   594                           ;ReceiverBot.c: 36: counter++;
   595  007E9C  2A01               	incf	receiveBit@counter,f,c
   596                           
   597                           ;ReceiverBot.c: 37: if (counter > 26) return (0);
   598  007E9E  0E1A               	movlw	26
   599  007EA0  6401               	cpfsgt	receiveBit@counter,c
   600  007EA2  D002               	goto	l71
   601  007EA4  0E00               	movlw	0
   602  007EA6  0012               	return	
   603  007EA8                     l71:
   604  007EA8  AE82               	btfss	3970,7,c	;volatile
   605  007EAA  D7F4               	goto	l717
   606                           
   607                           ;ReceiverBot.c: 38: }
   608                           ;ReceiverBot.c: 39: return (counter);
   609  007EAC  5001               	movf	receiveBit@counter,w,c
   610  007EAE  0012               	return	
   611  007EB0                     __end_of_receiveBit:
   612                           	opt stack 0
   613                           wreg	equ	0xFE8
   614                           status	equ	0xFD8
   615                           
   616 ;; *************** function _initPorts *****************
   617 ;; Defined at:
   618 ;;		line 27 in file "CHRP3.c"
   619 ;; Parameters:    Size  Location     Type
   620 ;;		None
   621 ;; Auto vars:     Size  Location     Type
   622 ;;		None
   623 ;; Return value:  Size  Location     Type
   624 ;;                  1    wreg      void 
   625 ;; Registers used:
   626 ;;		wreg, status,2
   627 ;; Tracked objects:
   628 ;;		On entry : 0/0
   629 ;;		On exit  : 0/0
   630 ;;		Unchanged: 0/0
   631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   632 ;;      Params:         0       0       0       0       0       0       0       0       0
   633 ;;      Locals:         0       0       0       0       0       0       0       0       0
   634 ;;      Temps:          0       0       0       0       0       0       0       0       0
   635 ;;      Totals:         0       0       0       0       0       0       0       0       0
   636 ;;Total ram usage:        0 bytes
   637 ;; Hardware stack levels used:    1
   638 ;; This function calls:
   639 ;;		Nothing
   640 ;; This function is called by:
   641 ;;		_main
   642 ;; This function uses a non-reentrant model
   643 ;;
   644                           
   645                           	psect	text5
   646  007EDA                     __ptext5:
   647                           	opt stack 0
   648  007EDA                     _initPorts:
   649                           	opt stack 30
   650                           
   651                           ;CHRP3.c: 29: LATA = 0b00000000;
   652                           
   653                           ;incstack = 0
   654  007EDA  0E00               	movlw	0
   655  007EDC  6E89               	movwf	3977,c	;volatile
   656                           
   657                           ;CHRP3.c: 30: ANSELA = 0b00000000;
   658  007EDE  0E00               	movlw	0
   659  007EE0  010F               	movlb	15	; () banked
   660  007EE2  6F5B               	movwf	91,b	;volatile
   661                           
   662                           ;CHRP3.c: 31: TRISA = 0b00101111;
   663  007EE4  0E2F               	movlw	47
   664  007EE6  6E92               	movwf	3986,c	;volatile
   665                           
   666                           ;CHRP3.c: 33: LATB = 0b00000000;
   667  007EE8  0E00               	movlw	0
   668  007EEA  6E8A               	movwf	3978,c	;volatile
   669                           
   670                           ;CHRP3.c: 34: ANSELB = 0b00000000;
   671  007EEC  0E00               	movlw	0
   672  007EEE  010F               	movlb	15	; () banked
   673  007EF0  6F5C               	movwf	92,b	;volatile
   674                           
   675                           ;CHRP3.c: 35: TRISB = 0b00000000;
   676  007EF2  0E00               	movlw	0
   677  007EF4  6E93               	movwf	3987,c	;volatile
   678                           
   679                           ; BSR set to: 15
   680                           ;CHRP3.c: 36: RBPU = 0;
   681  007EF6  9EF1               	bcf	intcon2,7,c	;volatile
   682                           
   683                           ;CHRP3.c: 38: LATC = 0b00000000;
   684  007EF8  0E00               	movlw	0
   685  007EFA  6E8B               	movwf	3979,c	;volatile
   686                           
   687                           ;CHRP3.c: 39: ANSELC = 0b00000000;
   688  007EFC  0E00               	movlw	0
   689  007EFE  010F               	movlb	15	; () banked
   690  007F00  6F5D               	movwf	93,b	;volatile
   691                           
   692                           ;CHRP3.c: 40: TRISC = 0b10110000;
   693  007F02  0EB0               	movlw	176
   694  007F04  6E94               	movwf	3988,c	;volatile
   695                           
   696                           ;CHRP3.c: 43: T0CON = 0b10000001;
   697  007F06  0E81               	movlw	129
   698  007F08  6ED5               	movwf	4053,c	;volatile
   699                           
   700                           ; BSR set to: 15
   701  007F0A  0012               	return		;funcret
   702  007F0C                     __end_of_initPorts:
   703                           	opt stack 0
   704                           intcon2	equ	0xFF1
   705                           wreg	equ	0xFE8
   706                           status	equ	0xFD8
   707                           
   708 ;; *************** function _initOsc *****************
   709 ;; Defined at:
   710 ;;		line 16 in file "CHRP3.c"
   711 ;; Parameters:    Size  Location     Type
   712 ;;		None
   713 ;; Auto vars:     Size  Location     Type
   714 ;;		None
   715 ;; Return value:  Size  Location     Type
   716 ;;                  1    wreg      void 
   717 ;; Registers used:
   718 ;;		wreg, status,2
   719 ;; Tracked objects:
   720 ;;		On entry : 0/0
   721 ;;		On exit  : 0/0
   722 ;;		Unchanged: 0/0
   723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   724 ;;      Params:         0       0       0       0       0       0       0       0       0
   725 ;;      Locals:         0       0       0       0       0       0       0       0       0
   726 ;;      Temps:          0       0       0       0       0       0       0       0       0
   727 ;;      Totals:         0       0       0       0       0       0       0       0       0
   728 ;;Total ram usage:        0 bytes
   729 ;; Hardware stack levels used:    1
   730 ;; This function calls:
   731 ;;		Nothing
   732 ;; This function is called by:
   733 ;;		_main
   734 ;; This function uses a non-reentrant model
   735 ;;
   736                           
   737                           	psect	text6
   738  007E78                     __ptext6:
   739                           	opt stack 0
   740  007E78                     _initOsc:
   741                           	opt stack 30
   742                           
   743                           ;CHRP3.c: 18: OSCTUNE = 0x80;
   744                           
   745                           ; BSR set to: 15
   746                           ;incstack = 0
   747  007E78  0E80               	movlw	128
   748  007E7A  6E9B               	movwf	3995,c	;volatile
   749                           
   750                           ;CHRP3.c: 19: OSCCON = 0x70;
   751  007E7C  0E70               	movlw	112
   752  007E7E  6ED3               	movwf	4051,c	;volatile
   753                           
   754                           ;CHRP3.c: 20: OSCCON2 = 0x10;
   755  007E80  0E10               	movlw	16
   756  007E82  6ED2               	movwf	4050,c	;volatile
   757                           
   758                           ;CHRP3.c: 21: ACTCON = 0x90;
   759  007E84  0E90               	movlw	144
   760  007E86  6EB5               	movwf	4021,c	;volatile
   761  007E88                     l41:
   762  007E88  BED2               	btfsc	4050,7,c	;volatile
   763  007E8A  0012               	return	
   764  007E8C  D7FD               	goto	l41
   765  007E8E                     __end_of_initOsc:
   766                           	opt stack 0
   767  0000                     intcon2	equ	0xFF1
   768                           wreg	equ	0xFE8
   769                           status	equ	0xFD8
   770                           intcon2	equ	0xFF1
   771                           wreg	equ	0xFE8
   772                           status	equ	0xFD8
   773                           
   774                           	psect	rparam
   775  0000                     intcon2	equ	0xFF1
   776                           wreg	equ	0xFE8
   777                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      5       8
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _receiveTransmission->_receiveAddress
    _receiveTransmission->_receiveData
    _receiveData->_receiveBit
    _receiveAddress->_receiveBit

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 2     2      0     360
                                              3 COMRAM     2     2      0
                            _initOsc
                          _initPorts
                _receiveTransmission
 ---------------------------------------------------------------------------------
 (1) _receiveTransmission                                  0     0      0     360
                     _receiveAddress
                         _receiveBit
                        _receiveData
 ---------------------------------------------------------------------------------
 (2) _receiveData                                          2     2      0     150
                                              1 COMRAM     2     2      0
                         _receiveBit
 ---------------------------------------------------------------------------------
 (2) _receiveAddress                                       2     2      0     180
                                              1 COMRAM     2     2      0
                         _receiveBit
 ---------------------------------------------------------------------------------
 (3) _receiveBit                                           1     1      0      30
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _initPorts                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _initOsc                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _initOsc
   _initPorts
   _receiveTransmission
     _receiveAddress
       _receiveBit
     _receiveBit
     _receiveData
       _receiveBit

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             7FF      0       0      21        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK3           100      0       0      11        0.0%
BANK3              100      0       0      12        0.0%
BITBANK2           100      0       0       9        0.0%
BANK2              100      0       0      10        0.0%
BITBANK1           100      0       0       7        0.0%
BANK1              100      0       0       8        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITCOMRAM           5F      0       0       0        0.0%
COMRAM              5F      5       8       1        8.4%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0       8       6        0.0%
DATA                 0      0       8       3        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V1.41 build -162212810 
Symbol Table                                                                                   Tue Jun 27 18:05:00 2017

                          l41 7E88                            l71 7EA8                            l80 7F58  
                          l94 7FAA                  __CFG_CP0$OFF 000000                  __CFG_CP1$OFF 000000  
                __CFG_CP2$OFF 000000                  __CFG_CP3$OFF 000000                           l110 7F18  
                         l717 7E94                           l751 7F90                           l743 7F7C  
                         l815 7F14                           l809 7ED0                           l755 7F94  
                         l739 7F6E                           l781 7FDC                           l775 7FC2  
                         l759 7F98                           l785 7FE0                           l789 7FE4  
                __CFG_CPB$OFF 000000                           u257 7F34                  __CFG_CPD$OFF 000000  
                         u267 7E96                           wreg 000FE8                  __CFG_LVP$OFF 000000  
                        _LATA 000F89                          _LATB 000F8A                          _LATC 000F8B  
                        _RBPU 007F8F                          _main 7F0C                 __CFG_BORV$190 000000  
                        start 2000                 __CFG_IESO$OFF 000000         ??_receiveTransmission 0004  
                ___param_bank 000000                         ?_main 0001                         _T0CON 000FD5  
                       _PORTB 000F81                         _TRISA 000F92                         _TRISB 000F93  
                       _TRISC 000F94                 __CFG_WRT0$OFF 000000                 __CFG_WRT1$OFF 000000  
               __CFG_WRT2$OFF 000000                 __CFG_WRT3$OFF 000000                __CFG_EBTR0$OFF 000000  
              __CFG_FCMEN$OFF 000000                __CFG_EBTR1$OFF 000000                __CFG_EBTR2$OFF 000000  
              __CFG_EBTR3$OFF 000000                 __CFG_WRTB$OFF 000000                 __CFG_WRTC$OFF 000000  
               __CFG_WRTD$OFF 000000                __CFG_EBTRB$OFF 000000               __end_of_initOsc 7E8E  
                       status 000FD8                __CFG_T3CMX$RC0 000000                  ?_receiveData 0001  
              __CFG_MCLRE$OFF 000000               __initialization 2008                  __end_of_main 7F4A  
                      ??_main 0004                 __activetblptr 000000                __CFG_SDOMX$RB3 000000  
             __CFG_CCP2MX$RC1 000000                        _ADCON0 000FC2                        _ADCON1 000FC1  
                      _ADCON2 000FC0                        _ACTCON 000FB5                        _ANSELA 000F5B  
                      _ANSELB 000F5C                        _ANSELC 000F5D                        _OSCCON 000FD3  
                      _PLLRDY 007E97                __CFG_XINST$OFF 000000                __CFG_STVREN$ON 000000  
            ??_receiveAddress 0002                     ??_initOsc 0001          __CFG_LS48MHZ$SYS48X8 000000  
                  __accesstop 0060       __end_of__initialization 200E               __CFG_PBADEN$OFF 000000  
               ___rparam_used 000001                __pcstackCOMRAM 0001              __CFG_nPWRTEN$OFF 000000  
             __CFG_PCLKEN$OFF 000000                __CFG_nLPBOR$ON 000000            __size_of_initPorts 0032  
        __size_of_receiveData 0052             __CFG_PLLSEL$PLL3X 000000               __CFG_WDTEN$SWON 000000  
                     _OSCCON2 000FD2                       _OSCTUNE 000F9B   __end_of_receiveTransmission 7EDA  
                     __Hparam 0000                       __Lparam 0000                       __pcinit 2008  
                     __ramtop 0800                       __ptext0 7F0C                       __ptext1 7EB0  
                     __ptext2 7F4A                       __ptext3 7F9C                       __ptext4 7E8E  
                     __ptext5 7EDA                       __ptext6 7E78             __end_of_initPorts 7F0C  
                     _initOsc 7E78                    _receiveBit 7E8E          end_of_initialization 200E  
             receiveAddress@i 0002                     _PORTCbits 000F82                     _PORTEbits 000F84  
                receiveData@i 0002                   ?_receiveBit 0001           start_initialization 2008  
                 __pbssCOMRAM 0006       __size_of_receiveAddress 0064                 ??_receiveData 0002  
         __size_of_receiveBit 0022                      ?_initOsc 0001                     _initPorts 7EDA  
                _receivedData 0006  __size_of_receiveTransmission 002A        receiveAddress@cAddress 0003  
            __CFG_WDTPS$32768 000000           __end_of_receiveData 7F9C             __CFG_CFGPLLEN$OFF 000000  
                  ?_initPorts 0001                      __Hrparam 0000                      __Lrparam 0000  
          __CFG_BOREN$SBORDIS 000000                  ??_receiveBit 0001              __size_of_initOsc 0016  
              _receiveAddress 7F9C                 __size_of_main 003E                   _receiveData 7F4A  
          __end_of_receiveBit 7EB0             receiveBit@counter 0001                   ??_initPorts 0001  
      __end_of_receiveAddress 8000             _receivedBitLength 0008              receiveData@cData 0003  
        __CFG_CPUDIV$NOCLKDIV 000000           _receiveTransmission 7EB0               ?_receiveAddress 0001  
          __CFG_FOSC$INTOSCIO 000000         _receivedDeviceAddress 0007          ?_receiveTransmission 0001  
